name: Appium Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Enable KVM group access
        run: |
          echo "Adding user to KVM group"
          if [ -e /dev/kvm ]; then
            sudo chown root:$USER /dev/kvm
            sudo chmod 0666 /dev/kvm
          fi

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'  # Using Java 11 for better Lombok compatibility

      - name: Install Appium
        run: |
          npm install -g appium@2.0.0
          appium driver install uiautomator2@2.12.1

      - name: Start Appium Server
        run: |
          appium --log appium.log &
          echo "Waiting for Appium to start..."
          sleep 5

      # Add Lombok fix for Maven compiler
      - name: Fix Lombok compatibility
        run: |
          echo "Adding Maven compiler arguments for Lombok compatibility"
          mkdir -p .mvn
          cat > .mvn/jvm.config << EOF
          --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED
          --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED
          --add-exports jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED
          --add-exports jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED
          --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED
          --add-exports jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED
          --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED
          --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED
          --add-opens jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED
          --add-opens jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED
          EOF

      - name: Run Appium tests with emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          profile: pixel
          script: |
            # Wait for emulator to fully boot
            adb wait-for-device
            adb devices
            
            # Wait for device to fully boot
            adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 5; echo "Waiting for boot to complete..."; done'
            adb shell getprop sys.boot_completed
            
            # Install APK
            echo "Finding and installing APK..."
            find . -name "*.apk" -exec adb install -r {} \; || echo "APK installation failed"
            
            # Set up configuration
            echo "Setting up configuration..."
            mkdir -p src/test/resources/config
            cp src/test/resources/config/github-actions-config.properties src/test/resources/config/config.properties || echo "Failed to copy config file"
            
            # Show device information
            adb shell getprop ro.build.version.release
            adb shell getprop ro.product.model
            
            # Run tests with Lombok fix
            echo "Running tests..."
            MAVEN_OPTS="--add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
                       --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
                       --add-exports jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED \
                       --add-exports jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED \
                       --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
                       --add-exports jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED \
                       --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
                       --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \
                       --add-opens jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \
                       --add-opens jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED \
                       -Xmx2048m" \
            mvn clean test || echo "Tests failed - check logs for details"
        env:
          EMULATOR_COMMAND_TIMEOUT: 1200 # 20 minutes timeout for emulator startup
          ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 300 # Wait 5 minutes before killing the emulator process

      - name: Debug on failure
        if: failure()
        run: |
          echo "Debug information on failure:"
          echo "----------------------------"
          echo "Appium log:"
          cat appium.log || echo "No appium.log file found"
          echo "----------------------------"
          echo "Emulator status:"
          adb devices || echo "No devices connected"
          echo "----------------------------"
          echo "Logcat output:"
          adb logcat -d || echo "No logcat available"