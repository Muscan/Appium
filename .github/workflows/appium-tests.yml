name: Appium Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  test:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java 17 first for Android SDK setup
      - name: Set up Java 17 for Android SDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Install Android SDK with Java 17
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # Now switch to Java 11 for your tests
      - name: Set up Java 11 for Tests
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Install Appium
        run: |
          npm install -g appium
          appium driver install uiautomator2
          appium --log appium.log &

      - name: List available Android packages
        run: |
          sdkmanager --list | grep system-images

      - name: Install Android images
        run: |
          echo "y" | sdkmanager "system-images;android-30;google_apis;x86_64"

      - name: Create and start emulator
        run: |
          echo "no" | avdmanager create avd --force --name test --package "system-images;android-30;google_apis;x86_64"
          emulator -avd test -no-window -no-audio -no-boot-anim &
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done'
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0
          adb devices

      - name: List project files
        run: |
          ls -la
          ls -la src/test/resources || echo "resources directory not found"
          find . -name "*.apk" || echo "No APK files found"

      - name: Install APK
        run: |
          mkdir -p src/test/resources/apps
          find . -name "*.apk" -exec adb install {} \; || echo "Failed to install APK"
          sleep 5

      - name: Setup configuration
        run: |
          mkdir -p src/test/resources/config
          cp src/test/resources/config/github-actions-config.properties src/test/resources/config/config.properties || echo "Failed to copy config file"
          cat src/test/resources/config/config.properties || echo "Cannot display config"

      - name: Run tests
        run: |
          echo "Running Maven tests..."
          mvn clean test

      - name: Check test results directory
        if: always()
        run: |
          ls -la target || echo "Target directory not found"
          find target -name "*.html" || echo "No HTML reports found"